name: DB – Defense view SR mapping + smoke tests (safe heredocs)

on:
  workflow_dispatch:
    inputs:
      T_NAME:
        description: "Nombre del torneo (ej: US Open)"
        required: true
        default: "US Open"
      SR_IDS:
        description: "SR IDs separados por coma (ej: 225050,407573)"
        required: true
        default: "225050,407573"
      USE_MATVIEW:
        description: "Crear materialized view con índice (true/false)"
        required: true
        default: "false"

jobs:
  build-defense-view-sr:
    runs-on: ubuntu-latest
    timeout-minutes: 15
    env:
      DATABASE_URL: ${{ secrets.DATABASE_URL }}
      T_NAME: ${{ inputs.T_NAME }}
      SR_IDS: ${{ inputs.SR_IDS }}
      USE_MATVIEW: ${{ inputs.USE_MATVIEW }}

    steps:
      - name: Install psql
        run: sudo apt-get update && sudo apt-get install -y postgresql-client

      - name: Sanity DB
        run: psql "$DATABASE_URL" -v ON_ERROR_STOP=1 -c "select now();"

      - name: Create helper function norm_tourney
        run: |
          cat > /tmp/helper.sql <<'SQL'
          CREATE OR REPLACE FUNCTION public.norm_tourney(txt text)
          RETURNS text LANGUAGE sql IMMUTABLE AS $$
            SELECT regexp_replace(lower(coalesce(txt,'')), '\s+', ' ', 'g')
          $$;
          SQL
          psql "$DATABASE_URL" -v ON_ERROR_STOP=1 -f /tmp/helper.sql

      - name: Build (materialized) view from mapping availability
        shell: bash
        run: |
          set -euo pipefail
      
          HAS_EXT=$(psql "$DATABASE_URL" -At -c "select exists (select 1 from information_schema.columns where table_schema='public' and table_name='players_ext' and column_name='ext_sportradar_id');")
          HAS_LOOKUP=$(psql "$DATABASE_URL" -At -c "select exists (select 1 from information_schema.columns where table_schema='public' and table_name='players_lookup' and column_name='ext_sportradar_id');")
      
          echo "HAS_EXT=$HAS_EXT  HAS_LOOKUP=$HAS_LOOKUP  USE_MATVIEW=$USE_MATVIEW"
      
          if [[ "$HAS_EXT" != "t" && "$HAS_LOOKUP" != "t" ]]; then
            echo "ERROR: No existe players_ext ni players_lookup con ext_sportradar_id"
            exit 1
          fi
      
          # Construimos el SELECT según fuentes disponibles
          if [[ "$HAS_EXT" == "t" && "$HAS_LOOKUP" == "t" ]]; then
            SELECT_BODY="
              SELECT
                pd.tourney_key,
                pd.player_id AS player_id_int,
                pd.points,
                pd.title_code,
                COALESCE(pe.ext_sportradar_id, pl.ext_sportradar_id) AS ext_sportradar_id,
                NULLIF(regexp_replace(COALESCE(pe.ext_sportradar_id, pl.ext_sportradar_id), '\\D','','g'),'')::int AS sr_competitor_id
              FROM public.player_defense_prev_year pd
              LEFT JOIN public.players_ext    pe ON pe.player_id = pd.player_id
              LEFT JOIN public.players_lookup pl ON pl.player_id = pd.player_id
            "
          elif [[ "$HAS_EXT" == "t" ]]; then
            SELECT_BODY="
              SELECT
                pd.tourney_key,
                pd.player_id AS player_id_int,
                pd.points,
                pd.title_code,
                pe.ext_sportradar_id,
                NULLIF(regexp_replace(pe.ext_sportradar_id, '\\D','','g'),'')::int AS sr_competitor_id
              FROM public.player_defense_prev_year pd
              JOIN public.players_ext pe ON pe.player_id = pd.player_id
            "
          else
            SELECT_BODY="
              SELECT
                pd.tourney_key,
                pd.player_id AS player_id_int,
                pd.points,
                pd.title_code,
                pl.ext_sportradar_id,
                NULLIF(regexp_replace(pl.ext_sportradar_id, '\\D','','g'),'')::int AS sr_competitor_id
              FROM public.player_defense_prev_year pd
              JOIN public.players_lookup pl ON pl.player_id = pd.player_id
            "
          fi
      
          if [[ "$USE_MATVIEW" == "true" ]]; then
            # Genera SQL de la MV sin heredoc
            SQL_FILE=/tmp/build_mv.sql
            : > "$SQL_FILE"
            printf "DROP VIEW IF EXISTS public.v_player_defense_prev_year_sr;\n" >> "$SQL_FILE"
            printf "DROP MATERIALIZED VIEW IF EXISTS public.mv_player_defense_prev_year_sr;\n\n" >> "$SQL_FILE"
            printf "CREATE MATERIALIZED VIEW public.mv_player_defense_prev_year_sr AS\n" >> "$SQL_FILE"
            printf "%s\n" "$SELECT_BODY" >> "$SQL_FILE"
            printf ";\n\n" >> "$SQL_FILE"
            printf "CREATE INDEX IF NOT EXISTS mv_defense_sr_idx ON public.mv_player_defense_prev_year_sr (sr_competitor_id);\n" >> "$SQL_FILE"
            printf "CREATE INDEX IF NOT EXISTS mv_defense_tourney_idx ON public.mv_player_defense_prev_year_sr (tourney_key);\n\n" >> "$SQL_FILE"
            printf "CREATE VIEW public.v_player_defense_prev_year_sr AS SELECT * FROM public.mv_player_defense_prev_year_sr;\n" >> "$SQL_FILE"
      
            psql "$DATABASE_URL" -v ON_ERROR_STOP=1 -f "$SQL_FILE"
          else
            # Genera SQL de la VIEW sin heredoc
            SQL_FILE=/tmp/build_view.sql
            : > "$SQL_FILE"
            printf "DROP MATERIALIZED VIEW IF EXISTS public.mv_player_defense_prev_year_sr;\n\n" >> "$SQL_FILE"
            printf "CREATE OR REPLACE VIEW public.v_player_defense_prev_year_sr AS\n" >> "$SQL_FILE"
            printf "%s\n" "$SELECT_BODY" >> "$SQL_FILE"
            printf ";\n" >> "$SQL_FILE"
      
            psql "$DATABASE_URL" -v ON_ERROR_STOP=1 -f "$SQL_FILE"
          fi


      - name: Smoke counts and samples
        run: |
          cat > /tmp/smoke.sql <<'SQL'
          -- total rows
          SELECT 'total_rows' AS label, COUNT(*) AS n
          FROM public.v_player_defense_prev_year_sr;

          \echo === sample by tournament key ===
          SELECT tourney_key, player_id_int, sr_competitor_id, points, title_code
          FROM public.v_player_defense_prev_year_sr
          WHERE tourney_key = public.norm_tourney(:'TNAME')
          ORDER BY points DESC, player_id_int
          LIMIT 20;

          \echo === sample by SR IDs ===
          WITH ids AS (SELECT string_to_array(:'IDS', ',')::int[] AS arr)
          SELECT v.tourney_key, v.sr_competitor_id, v.points, v.title_code
          FROM public.v_player_defense_prev_year_sr v, ids
          WHERE v.sr_competitor_id = ANY(ids.arr)
          ORDER BY v.points DESC, v.sr_competitor_id
          LIMIT 50;
          SQL
          psql "$DATABASE_URL" -v ON_ERROR_STOP=1 -v TNAME="$T_NAME" -v IDS="$SR_IDS" -f /tmp/smoke.sql

      - name: Export CSV artifacts
        run: |
          mkdir -p /tmp/defense_view_sr

          cat > /tmp/export_by_tourney.sql <<'SQL'
          \COPY (
            SELECT
              tourney_key,
              player_id_int,
              sr_competitor_id,
              points,
              title_code
            FROM public.v_player_defense_prev_year_sr
            WHERE tourney_key = public.norm_tourney(:'TNAME')
            ORDER BY points DESC, player_id_int
          ) TO STDOUT WITH CSV HEADER;
          SQL
          psql "$DATABASE_URL" -v ON_ERROR_STOP=1 -v TNAME="$T_NAME" -f /tmp/export_by_tourney.sql > /tmp/defense_view_sr/defense_by_tourney.csv || true

          cat > /tmp/export_by_srids.sql <<'SQL'
          \COPY (
            WITH ids AS (SELECT string_to_array(:'IDS', ',')::int[] AS arr)
            SELECT
              tourney_key,
              sr_competitor_id,
              points,
              title_code
            FROM public.v_player_defense_prev_year_sr, ids
            WHERE sr_competitor_id = ANY(ids.arr)
            ORDER BY tourney_key, points DESC, sr_competitor_id
          ) TO STDOUT WITH CSV HEADER;
          SQL
          psql "$DATABASE_URL" -v ON_ERROR_STOP=1 -v IDS="$SR_IDS" -f /tmp/export_by_srids.sql > /tmp/defense_view_sr/defense_by_srids.csv || true

          echo "Lines by_tourney:"; wc -l /tmp/defense_view_sr/defense_by_tourney.csv || true
          echo "Lines by_srids:";  wc -l /tmp/defense_view_sr/defense_by_srids.csv  || true
          head -n 10 /tmp/defense_view_sr/defense_by_tourney.csv || true
          head -n 10 /tmp/defense_view_sr/defense_by_srids.csv  || true

      - name: Upload artifact
        uses: actions/upload-artifact@v4
        with:
          name: defense_view_sr_artifacts
          path: /tmp/defense_view_sr/
          retention-days: 7
