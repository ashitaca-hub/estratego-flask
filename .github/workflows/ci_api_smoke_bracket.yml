name: api-smoke-bracket

on:
  workflow_dispatch:

jobs:
  bracket:
    runs-on: ubuntu-latest
    env:
      SUPABASE_URL: ${{ secrets.SUPABASE_URL }}
      SUPABASE_KEY: ${{ secrets.SUPABASE_KEY }}
      SR_API_KEY:   ${{ secrets.SR_API_KEY }}
      PORT: "8080"
      APP_MODULE: "main:app"   # <-- ajusta aquí si tu app está en otro módulo

    steps:
      - uses: actions/checkout@v4
      - uses: actions/setup-python@v5
        with:
          python-version: "3.11"

      - name: Install deps
        run: |
          set -e
          if [ -f requirements.txt ]; then
            pip install -r requirements.txt
          else
            pip install flask
          fi

      - name: Sanity & files
        run: |
          set -e
          [ -n "$SUPABASE_URL" ] || { echo "::error::SUPABASE_URL missing"; exit 1; }
          [ -n "$SUPABASE_KEY" ] || { echo "::error::SUPABASE_KEY missing"; exit 1; }
          test -f apps_script/start_api.py || { echo "::error::apps_script/start_api.py no existe"; exit 1; }
          # main.py puede no existir si usas otro módulo; lo avisamos solo como warning:
          test -f main.py || echo "::warning::main.py no encontrado; usando APP_MODULE=${APP_MODULE}"

      - name: Start API
        run: |
          set -e
          nohup python -u apps_script/start_api.py > app.log 2>&1 &
          for i in $(seq 1 40); do
            if curl -sf http://127.0.0.1:${PORT}/health  >/dev/null 2>&1; then break; fi
            if curl -sf http://127.0.0.1:${PORT}/healthz >/dev/null 2>&1; then break; fi
            sleep 1
          done
          if ! (curl -sf http://127.0.0.1:${PORT}/health >/dev/null 2>&1 || curl -sf http://127.0.0.1:${PORT}/healthz >/dev/null 2>&1); then
            echo "::error::API no responde"
            tail -n 200 app.log || true
            echo "== Árbol de archivos =="
            ls -R
            exit 1
          fi

      - name: Simular bracket
        run: |
          set -e
          python apps_script/simulate_bracket.py

      - name: app.log (tail if fail)
        if: failure()
        run: |
          echo "----- app.log (tail) -----"
          tail -n 200 app.log || true
