name: api-prematch-html

on:
  workflow_dispatch:
    inputs:
      player:
        description: "Jugador A (nombre o sr:competitor:ID)"
        required: false
        default: "sr:competitor:225050"
      opponent:
        description: "Jugador B (nombre o sr:competitor:ID)"
        required: false
        default: "sr:competitor:407573"
      tname:
        description: "Nombre torneo"
        required: false
        default: "Cincinnati"
      month:
        description: "Mes (1-12)"
        required: false
        default: "8"
      years_back:
        description: "Histórico (años)"
        required: false
        default: "4"

jobs:
  prematch:
    runs-on: ubuntu-latest
    env:
      SUPABASE_URL: ${{ secrets.SUPABASE_URL }}
      SUPABASE_KEY: ${{ secrets.SUPABASE_KEY }}
      SR_API_KEY:   ${{ secrets.SR_API_KEY }}

    steps:
      - name: Checkout
        uses: actions/checkout@v4

      - name: Setup Python
        uses: actions/setup-python@v5
        with:
          python-version: "3.11"

      - name: Install deps
        run: |
          python -m pip install --upgrade pip
          pip install -r requirements.txt

      - name: Syntax check
        run: |
          python - <<'PY'
          import py_compile
          py_compile.compile('main.py', doraise=True)
          print("OK: main.py compila")
          PY

      - name: Launch API on 8080
        run: |
          python apps_script/start_api.py main:app &
          for i in {1..30}; do
            sleep 1
            if curl -fsS http://127.0.0.1:8080/health >/dev/null; then
              echo "API UP"
              break
            fi
          done
          curl -fsS http://127.0.0.1:8080/health

      - name: Build payload and call /matchup/prematch
        env:
          IN_PLAYER:   ${{ github.event.inputs.player }}
          IN_OPP:      ${{ github.event.inputs.opponent }}
          IN_TNAME:    ${{ github.event.inputs.tname }}
          IN_MONTH:    ${{ github.event.inputs.month }}
          IN_YBACK:    ${{ github.event.inputs.years_back }}
        run: |
          set -euo pipefail

          PLAYER="${IN_PLAYER:-sr:competitor:225050}"
          OPP="${IN_OPP:-sr:competitor:407573}"
          TNAME="${IN_TNAME:-Cincinnati}"
          MONTH="${IN_MONTH:-8}"
          YB="${IN_YBACK:-4}"

          # Construye el JSON con jq (sin heredocs/paren-matching)
          jq -n \
            --arg p "$PLAYER" \
            --arg o "$OPP" \
            --arg t "$TNAME" \
            --argjson m "$MONTH" \
            --argjson yb "$YB" \
            '{
              tournament: {name:$t, month:$m},
              years_back: $yb,
              player_id: $p,
              opponent_id: $o
            }' > payload.json

          echo "== Payload ==" && cat payload.json | jq .

          # Llama al endpoint HTML
          curl -sS -X POST "http://127.0.0.1:8080/matchup/prematch" \
               -H "Content-Type: application/json" \
               --data @payload.json > prematch.html

          grep -qi "<html" prematch.html || { echo "::error::Respuesta no es HTML"; exit 1; }

          # Nombra el artefacto de forma amigable
          SAFE_P=$(echo "$PLAYER" | tr ' :/' '__')
          SAFE_O=$(echo "$OPP"    | tr ' :/' '__')
          SAFE_T=$(echo "$TNAME"  | tr ' /'  '_')
          OUT="prematch_${SAFE_T}_${SAFE_P}_vs_${SAFE_O}.html"
          mv prematch.html "$OUT"
          echo "GENERATED=$OUT" >> $GITHUB_ENV
          echo "== Guardado: $OUT =="

      - name: Upload artifact
        uses: actions/upload-artifact@v4
        with:
          name: prematch_html
          path: ${{ env.GENERATED }}
          if-no-files-found: error
